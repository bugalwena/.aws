{
    // Use IntelliSense to learn about possible attributes.
    // Hover to view descriptions of existing attributes.
    // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
    "version": "0.2.0",
    "configurations": [
        


        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        ,{
            "name": "Electron Main",
            "program": "${workspaceFolder}/main.js",
            "request": "launch",
            "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/electron",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },{
            "type": "autojs",
            "request": "launch",
            "main": "main.js",
            "stopOnEntry": true,
            "device": "[current]",
            "name": "[Auto.js Pro调试]使用最近设备"
        },{},
        {
            "args": [
                "--extensionDevelopmentPath=${workspaceFolder}"
            ],
            "name": "Launch Extension",
            "outFiles": [
                "${workspaceFolder}/out/**/*.js"
            ],
            "preLaunchTask": "npm",
            "request": "launch",
            "type": "extensionHost"
        },
        {
            "type": "scala",
            "request": "launch",
            "name": "Untitled",
            "testClass": "???"
        },
        {
            "type": "scala",
            "request": "launch",
            "name": "Untitled",
            "mainClass": "???",
            "args": [],
            "jvmOptions": [],
            "env": {}
        },
        {
            "type": "scala",
            "request": "launch",
            "name": "Play main",
            "mainClass": "play.core.server.ProdServerStart",
            "args": [],
            "jvmOptions": [],
            "buildTarget": "???"
        },
        {
            "type": "scala",
            "request": "attach",
            "name": "Untitled",
            "buildTarget": "???",
            "hostName": "localhost",
            "port": 5005
        },
        {
            "command": "npm start",
            "name": "Run npm start",
            "request": "launch",
            "type": "node-terminal"
        },
        {
            "command": "npm start",
            "name": "Run npm start",
            "request": "launch",
            "type": "node-terminal"
        },
        {
            "name": "RSpec - all",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/rspec",
            "args": [
                "-I",
                "${workspaceRoot}"
            ]
        },
        {
            "name": "RSpec - active spec file only",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/rspec",
            "args": [
                "-I",
                "${workspaceRoot}",
                "${file}"
            ]
        },
        {
            "name": "Rails server",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/rails",
            "args": [
                "server"
            ]
        },
        {
            "name": "RSpec - active spec file only",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/rspec",
            "args": [
                "-I",
                "${workspaceRoot}",
                "${file}"
            ]
        },
        {
            "name": "Rails server",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/rails",
            "args": [
                "server"
            ]
        },
        {
            "name": "Listen for rdebug-ide",
            "type": "Ruby",
            "request": "attach",
            "remoteHost": "127.0.0.1",
            "remotePort": "1234",
            "remoteWorkspaceRoot": "${workspaceRoot}"
        },
        {
            "name": "Debug Local File",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/main.rb"
        },
        {
            "name": "Cucumber",
            "type": "Ruby",
            "request": "launch",
            "program": "${workspaceRoot}/bin/cucumber"
        },
        {
            "name": "ROS: Launch",
            "type": "ros",
            "request": "launch",
            "target": "absolute path to launch file"
        },
        {
            "name": "ROS: Attach",
            "type": "ros",
            "request": "attach"
        },
        {
            "name": "Python C++ Debugger",
            "type": "pythoncpp",
            "request": "launch",
            "pythonConfig": "default",
            "cppConfig": "!!pick 'default (win) Attach' or 'default (gdb) Attach'"
        },
        {
            "name": "Python C++ Debugger",
            "type": "pythoncpp",
            "request": "launch",
            "pythonLaunchName": "Python: Current File",
            "cppAttachName": "'(Windows) Attach' or '(gdb) Attach'"
        },
        {
            "name": "Python C++ Debugger",
            "type": "pythoncpp",
            "request": "launch",
            "pythonLaunchName": "Python: Current File",
            "cppAttachName": "'(Windows) Attach' or '(gdb) Attach'"
        },
        {
            "name": "PowerShell Launch Script",
            "type": "PowerShell",
            "request": "launch",
            "script": "enter path or command to execute e.g.: ${workspaceFolder}/src/foo.ps1 or Invoke-Pester",
            "cwd": "${cwd}"
        },
        {
            "name": "PowerShell Launch Current File",
            "type": "PowerShell",
            "request": "launch",
            "script": "${file}",
            "cwd": "${cwd}"
        },
        {
            "name": "PowerShell Interactive Session",
            "type": "PowerShell",
            "request": "launch",
            "cwd": "${cwd}"
        },
        {
            "name": "PowerShell Interactive Session",
            "type": "PowerShell",
            "request": "launch",
            "cwd": "${cwd}"
        },
        {
            "name": "PowerShell Attach to Host Process",
            "type": "PowerShell",
            "request": "attach",
            "runspaceId": 1
        },
        {
            "name": "PowerShell Attach Interactive Session Runspace",
            "type": "PowerShell",
            "request": "attach",
            "processId": "current"
        },
        {
            "name": "PlatformIO Debugger",
            "request": "launch",
            "type": "platformio-debug",
            "executable": ".pio/build/myenv/firmware.elf",
            "toolchainBinDir": "/usr/local/bin"
        },
        {
            "name": "PlatformIO Debugger",
            "request": "launch",
            "type": "platformio-debug",
            "executable": ".pio/build/myenv/firmware.elf",
            "toolchainBinDir": "/usr/local/bin"
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I: Wait for attachment",
            "waitForAttachment": {
                "id": "<unique-id>"
            }
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I (Remote-SSH)",
            "program": "<insert-program-name-here>",
            "env": [
                {
                    "name": "TERM",
                    "value": "xterm"
                },
                {
                    "name": "DISPLAY",
                    "value": "<hostname-or-ip:D.S>"
                }
            ],
            "stopOnEntry": true
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I (remote)",
            "program": "<insert-program-name-here>",
            "remoteDebug": {
                "machine": "Please enter the name or IP address of the machine runing cobdebugremote.",
                "port": 0
            },
            "stopOnEntry": true
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I (64-bit)",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "is64Bit": true,
            "stopOnEntry": true
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I (Enterprise Server)",
            "enterpriseServer": {
                "serverName": "Please enter the name of the server to debug.",
                "serverAddress": "Please enter the address of the 'mfcs-mp' or 'soap' listener for the server. eg tcp:127.0.0.1:<nnn>."
            }
        },
        {
            "type": "pli",
            "request": "attach",
            "name": "PL/I: Attach to process",
            "processId": "${command:pickProcess}"
        },
        {
            "type": "pli",
            "request": "launch",
            "name": "PL/I: (debugCurrentFile)",
            "program": "${workspaceFolder}/${fileBasenameNoExtension}",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "name": "Listen for Xdebug",
            "type": "php",
            "request": "launch",
            "port": 9000
        },
        {
            "name": "Launch currently open script",
            "type": "php",
            "request": "launch",
            "program": "${file}",
            "cwd": "${fileDirname}"
        },
        {
            "name": "Launch currently open script",
            "type": "php",
            "request": "launch",
            "program": "${file}",
            "cwd": "${fileDirname}"
        },
        {
            "name": "Launch currently open script",
            "type": "php",
            "request": "launch",
            "program": "${file}",
            "cwd": "${fileDirname}"
        },
        {
            "type": "objectscript",
            "request": "launch",
            "name": "ObjectScript Run current routine",
            "program": "${file}"
        },
        {
            "args": [
                "generator"
            ],
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "Yeoman generator",
            "program": "${workspaceFolder}/node_modules/yo/lib/cli.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "nodemon",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "restart": true,
            "runtimeExecutable": "nodemon",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "console": "integratedTerminal",
            "internalConsoleOptions": "neverOpen",
            "name": "nodemon",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "restart": true,
            "runtimeExecutable": "nodemon",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "args": [
                "-u",
                "tdd",
                "--timeout",
                "999999",
                "--colors",
                "${workspaceFolder}/test"
            ],
            "internalConsoleOptions": "openOnSessionStart",
            "name": "Mocha Tests",
            "program": "${workspaceFolder}/node_modules/mocha/bin/_mocha",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Launch via NPM",
            "request": "launch",
            "runtimeArgs": [
                "run-script",
                "debug"
            ],
            "runtimeExecutable": "npm",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Launch Program",
            "program": "${workspaceFolder}/app.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "args": [
                "task"
            ],
            "name": "Gulp task",
            "program": "${workspaceFolder}/node_modules/gulp/bin/gulp.js",
            "request": "launch",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Electron Main",
            "program": "${workspaceFolder}/main.js",
            "request": "launch",
            "runtimeExecutable": "${workspaceFolder}/node_modules/.bin/electron",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "address": "TCP/IP address of process to be debugged",
            "localRoot": "${workspaceFolder}",
            "name": "Attach to Remote",
            "port": 9229,
            "remoteRoot": "Absolute path to the remote directory containing the program",
            "request": "attach",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Attach by Process ID",
            "processId": "${command:PickProcess}",
            "request": "attach",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "name": "Attach",
            "port": 9229,
            "request": "attach",
            "skipFiles": [
                "<node_internals>/**"
            ],
            "type": "node"
        },
        {
            "type": "vscode-edge-devtools.debug",
            "request": "launch",
            "name": "Launch Microsoft Edge and open the Edge DevTools",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "vscode-edge-devtools.debug",
            "request": "attach",
            "name": "Attach to Microsoft Edge and open the Edge DevTools",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "julia",
            "request": "launch",
            "name": "Launch Julia tests",
            "program": "${workspaceFolder}/test/runtests.jl",
            "stopOnEntry": true
        },
        {
            "type": "julia",
            "request": "launch",
            "name": "Launch Program",
            "program": "${workspaceFolder}/Program",
            "stopOnEntry": false
        },
        {
            "type": "java",
            "name": "Launch with Arguments Prompt",
            "request": "launch",
            "mainClass": "",
            "args": "${command:SpecifyProgramArgs}"
        },
        {
            "type": "java",
            "name": "Launch External Terminal",
            "request": "launch",
            "console": "externalTerminal",
            "mainClass": ""
        },
        {
            "type": "java",
            "name": "Launch Current File",
            "request": "launch",
            "mainClass": "${file}"
        },
        {
            "type": "java",
            "name": "Launch Java Program",
            "request": "launch",
            "mainClass": ""
        },
        {
            "type": "java",
            "name": "Attach to Remote Program",
            "request": "attach",
            "hostName": "<The host name or ip address of remote debuggee>",
            "port": "<debug port of remote debuggee>"
        },
        {
            "type": "java",
            "name": "Attach to Remote Program",
            "request": "attach",
            "hostName": "<The host name or ip address of remote debuggee>",
            "port": "<debug port of remote debuggee>"
        },
        {
            "type": "java",
            "request": "attach",
            "name": "Attach by Process ID",
            "processId": "${command:PickJavaProcess}"
        },
        {
            "type": "java",
            "name": "Attach",
            "request": "attach",
            "hostName": "localhost",
            "port": "<debug port of the debuggee>"
        },
        {
            "name": "Launch test function",
            "type": "go",
            "request": "launch",
            "mode": "test",
            "program": "${workspaceFolder}",
            "args": [
                "-test.run",
                "MyTestFunction"
            ]
        },
        {
            "name": "Launch Package",
            "type": "go",
            "request": "launch",
            "mode": "auto",
            "program": "${fileDirname}"
        },
        {
            "name": "Launch file",
            "type": "go",
            "request": "launch",
            "mode": "debug",
            "program": "${file}"
        },
        {
            "name": "Connect to server",
            "type": "go",
            "request": "attach",
            "mode": "remote",
            "remotePath": "${workspaceFolder}",
            "port": 2345,
            "host": "127.0.0.1"
        },
        {
            "name": "Attach to Process",
            "type": "go",
            "request": "attach",
            "mode": "local",
            "processId": 0
        },
        {
            "type": "godot",
            "request": "launch",
            "project": "",
            "port": 6007,
            "address": "127.0.0.1",
            "launch_game_instance": true,
            "launch_scene": false
        },
        {
            "type": "by-gdb",
            "request": "launch",
            "name": "Launch(SSH)",
            "program": "Input program path on remote.",
            "cwd": "Input remote directory",
            "ssh": {
                "enabled": true,
                "username": "root",
                "address": "[ip:port]",
                "passwordType": "none"
            }
        },
        {
            "type": "by-gdb",
            "request": "launch",
            "name": "Launch(gdb)",
            "program": "${fileBasenameNoExtension}",
            "cwd": "${workspaceRoot}"
        },
        {
            "type": "by-gdb",
            "request": "launch",
            "name": "Launch(remote)",
            "program": "${fileBasenameNoExtension}",
            "cwd": "${workspaceRoot}",
            "remote": {
                "enabled": true,
                "address": ":2345",
                "mode": "remote",
                "execfile": "${fileBasenameNoExtension}"
            }
        },
        {
            "type": "by-gdb",
            "request": "attach",
            "name": "Attach(gdb)",
            "program": "${fileBasenameNoExtension}",
            "cwd": "${workspaceRoot}",
            "processId": 1234
        },
        {
            "name": "Gauge Run Option",
            "type": "gauge",
            "request": "test"
        },
        {
            "name": "Gauge Run Option",
            "type": "gauge",
            "request": "test"
        },
        {
            "type": "firefox",
            "request": "launch",
            "reAttach": true,
            "name": "Launch add-on",
            "addonPath": "${workspaceFolder}"
        },
        {
            "type": "firefox",
            "request": "launch",
            "reAttach": true,
            "name": "Launch localhost",
            "url": "http://localhost/index.html",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "firefox",
            "request": "launch",
            "reAttach": true,
            "name": "Launch index.html",
            "file": "${workspaceFolder}/index.html"
        },
        {
            "type": "firefox",
            "request": "launch",
            "reAttach": true,
            "name": "Launch index.html",
            "file": "${workspaceFolder}/index.html"
        },
        {
            "type": "firefox",
            "request": "attach",
            "name": "Attach"
        },
        {
            "name": "ESP-IDF Debug: Launch",
            "type": "espidf",
            "request": "launch"
        },
        {
            "type": "mix_task",
            "request": "launch",
            "name": "mix task",
            "task": "task",
            "taskArgs": [],
            "projectDir": "${workspaceRoot}"
        },
        {
            "name": "Launch Edge",
            "request": "launch",
            "type": "msedge",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Launch Edge",
            "request": "launch",
            "type": "msedge",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Attach to Edge",
            "port": 9222,
            "request": "attach",
            "type": "msedge",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "node",
            "request": "attach",
            "name": "Docker: Attach to Node",
            "remoteRoot": "/usr/src/app"
        },
        {
            "name": "Docker .NET Core Attach (Preview)",
            "type": "docker",
            "request": "attach",
            "platform": "netCore",
            "sourceFileMap": {
                "/src": "${workspaceFolder}"
            }
        },
        {
            "name": "Simulate iOS in browser",
            "type": "cordova",
            "request": "launch",
            "platform": "ios",
            "target": "chrome",
            "simulatePort": 8000,
            "livereload": true,
            "cwd": "${workspaceFolder}",
            "sourceMaps": true
        },
        {
            "name": "Simulate Android in browser",
            "type": "cordova",
            "request": "launch",
            "platform": "android",
            "target": "chrome",
            "simulatePort": 8000,
            "livereload": true,
            "cwd": "${workspaceFolder}",
            "sourceMaps": true
        },
        {
            "name": "Simulate Android in browser",
            "type": "cordova",
            "request": "launch",
            "platform": "android",
            "target": "chrome",
            "simulatePort": 8000,
            "livereload": true,
            "cwd": "${workspaceFolder}",
            "sourceMaps": true
        },
        {
            "name": "Simulate Android in browser",
            "type": "cordova",
            "request": "launch",
            "platform": "android",
            "target": "chrome",
            "simulatePort": 8000,
            "livereload": true,
            "cwd": "${workspaceFolder}",
            "sourceMaps": true
        },
        {
            "name": "Serve to the browser (Ionic Serve)",
            "type": "cordova",
            "request": "launch",
            "target": "chrome",
            "platform": "serve",
            "devServerAddress": "localhost",
            "sourceMaps": true,
            "ionicLiveReload": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Run iOS on simulator - experimental",
            "type": "cordova",
            "request": "launch",
            "platform": "ios",
            "target": "emulator",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Run iOS on device",
            "type": "cordova",
            "request": "launch",
            "platform": "ios",
            "target": "device",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Run Browser",
            "type": "cordova",
            "request": "launch",
            "platform": "browser",
            "target": "chrome",
            "simulatePort": 8000,
            "livereload": true,
            "cwd": "${workspaceFolder}",
            "sourceMaps": true
        },
        {
            "name": "Run Android on emulator",
            "type": "cordova",
            "request": "launch",
            "platform": "android",
            "target": "emulator",
            "port": 9222,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running iOS on simulator - experimental",
            "type": "cordova",
            "request": "attach",
            "platform": "ios",
            "target": "emulator",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running iOS on device",
            "type": "cordova",
            "request": "attach",
            "platform": "ios",
            "target": "device",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running iOS on simulator - experimental",
            "type": "cordova",
            "request": "attach",
            "platform": "ios",
            "target": "emulator",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running iOS on device",
            "type": "cordova",
            "request": "attach",
            "platform": "ios",
            "target": "device",
            "port": 9220,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running Android on emulator",
            "type": "cordova",
            "request": "attach",
            "platform": "android",
            "target": "emulator",
            "port": 9222,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running Android on device",
            "type": "cordova",
            "request": "attach",
            "platform": "android",
            "target": "device",
            "port": 9222,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "name": "Attach to running Android on device",
            "type": "cordova",
            "request": "attach",
            "platform": "android",
            "target": "device",
            "port": 9222,
            "sourceMaps": true,
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Launch",
            "program": "${workspaceFolder}/<program>",
            "args": [],
            "cwd": "${workspaceFolder}"
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Cargo test",
            "cargo": {
                "args": [
                    "test",
                    "--no-run",
                    "--lib"
                ]
            },
            "args": []
        },
        {
            "type": "lldb",
            "request": "launch",
            "name": "Cargo launch",
            "cargo": {
                "args": [
                    "build",
                    "--lib"
                ]
            },
            "args": []
        },
        {
            "type": "lldb",
            "request": "custom",
            "name": "Custom launch",
            "targetCreateCommands": [
                "target create ${workspaceFolder}/<program>"
            ],
            "processCreateCommands": [
                "settings set target.run-args value1 value2 value3",
                "process launch"
            ]
        },
        {
            "type": "lldb",
            "request": "custom",
            "name": "Custom launch",
            "targetCreateCommands": [
                "target create ${workspaceFolder}/<program>"
            ],
            "processCreateCommands": [
                "settings set target.run-args value1 value2 value3",
                "process launch"
            ]
        },
        {
            "type": "lldb",
            "request": "attach",
            "name": "Attach",
            "pid": "${command:pickMyProcess}" // use ${command:pickProcess} to pick other users' processes
        },
        {
            "type": "lldb",
            "request": "attach",
            "name": "Attach",
            "program": "${workspaceFolder}/<program>"
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL: (debugCurrentFile)",
            "program": "${workspaceFolder}/${fileBasenameNoExtension}.int",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Wait for attachment",
            "waitForAttachment": {
                "any": {}
            }
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Remote-SSH",
            "program": "<insert-program-name-here>",
            "env": [
                {
                    "name": "TERM",
                    "value": "xterm"
                },
                {
                    "name": "DISPLAY",
                    "value": "<hostname-or-ip:D.S>"
                }
            ],
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): 64-bit",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "is64Bit": true,
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL: (debugCurrentFile)",
            "program": "${workspaceFolder}/${fileBasenameNoExtension}.int",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Wait for attachment",
            "waitForAttachment": {
                "any": {}
            }
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Remote-SSH",
            "program": "<insert-program-name-here>",
            "env": [
                {
                    "name": "TERM",
                    "value": "xterm"
                },
                {
                    "name": "DISPLAY",
                    "value": "<hostname-or-ip:D.S>"
                }
            ],
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): remote",
            "program": "<insert-program-name-here>",
            "remoteDebug": {
                "machine": "Please enter the name or IP address of the machine runing cobdebugremote.",
                "port": 0
            },
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): 64-bit",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "is64Bit": true,
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native)",
            "program": "${workspaceFolder}/<insert-program-name-here>",
            "cwd": "${workspaceFolder}",
            "stopOnEntry": true
        },
        {
            "type": "cobol",
            "request": "launch",
            "name": "COBOL (native): Enterprise Server",
            "enterpriseServer": {
                "serverName": "Please enter the name of the server to debug.",
                "serverAddress": "Please enter the address of the 'mfcs-mp' or 'soap' listener for the server. eg tcp:127.0.0.1:<nnn>."
            }
        },
        {
            "type": "cobol",
            "request": "attach",
            "name": "COBOL (native): Attach to process",
            "processId": "${command:pickProcess}"
        },
        {
            "type": "cobol",
            "request": "attach",
            "name": "COBOL (native): Attach to process",
            "processId": "${command:pickProcess}"
        },
        {
            "name": "Kubernetes: Run/Debug",
            "type": "cloudcode.kubernetes",
            "request": "launch",
            "skaffoldConfig": "${workspaceFolder}/skaffold.yaml",
            "watch": true,
            "cleanUp": true,
            "portForward": true
        },
        {
            "name": "Cloud Run: Run/Debug Locally",
            "type": "cloudcode.cloudrun",
            "request": "launch",
            "build": {
                "docker": {
                    "path": "Dockerfile"
                }
            },
            "image": "${workspaceFolderBasename}",
            "service": {
                "name": "${workspaceFolderBasename}",
                "containerPort": 8080,
                "resources": {
                    "limits": {
                        "memory": "256Mi"
                    }
                }
            },
            "target": {
                "minikube": {}
            },
            "watch": true
        },
        {
            "name": "Attach to Kubernetes Pod (Python)",
            "type": "cloudcode.kubernetes",
            "request": "attach",
            "language": "Python",
            "debugPort": 3000,
            "podSelector": {
                "app": "deployment-name"
            },
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "Path to the Remote Directory Containing the Program"
        },
        {
            "name": "Attach to Kubernetes Pod (Python)",
            "type": "cloudcode.kubernetes",
            "request": "attach",
            "language": "Python",
            "debugPort": 3000,
            "podSelector": {
                "app": "deployment-name"
            },
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "Path to the Remote Directory Containing the Program"
        },
        {
            "name": "Attach to Kubernetes Pod (NodeJS)",
            "type": "cloudcode.kubernetes",
            "request": "attach",
            "language": "Node",
            "debugPort": 9229,
            "podSelector": {
                "app": "deployment-name"
            },
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "Path to the Remote Directory Containing the Program"
        },
        {
            "name": "Cloud Run: Run/Debug Locally",
            "type": "cloudcode.cloudrun",
            "request": "launch",
            "build": {
                "docker": {
                    "path": "Dockerfile"
                }
            },
            "image": "${workspaceFolderBasename}",
            "service": {
                "name": "${workspaceFolderBasename}",
                "containerPort": 8080,
                "resources": {
                    "limits": {
                        "memory": "256Mi"
                    }
                }
            },
            "target": {
                "minikube": {}
            },
            "watch": true
        },
        {
            "name": "Attach to Kubernetes Pod (Java)",
            "type": "cloudcode.kubernetes",
            "request": "attach",
            "language": "Java",
            "debugPort": 50005,
            "podSelector": {
                "app": "deployment-name"
            }
        },
        {
            "name": "Attach to Kubernetes Pod (.NET Core)",
            "type": "cloudcode.kubernetes",
            "request": "attach",
            "language": "NETCore",
            "podSelector": {
                "app": "deployment-name"
            },
            "localRoot": "${workspaceFolder}",
            "remoteRoot": "Path to the Remote Directory Containing the Program"
        },
        {
            "name": "Launch Chrome",
            "request": "launch",
            "type": "chrome",
            "url": "http://localhost:8080",
            "webRoot": "${workspaceFolder}"
        },
        {
            "type": "chrome",
            "request": "attach",
            "name": "Attach to Chrome",
            "port": 9222,
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Attach to Chrome",
            "port": 9222,
            "request": "attach",
            "type": "chrome",
            "webRoot": "${workspaceFolder}"
        },
        {
            "name": "Attach Camel Debugger after starting the Camel Application using the preLaunchTask specified",
            "type": "apache.camel",
            "request": "attach",
            "preLaunchTask": "Start Camel application"
        },
        {
            "name": "Attach Camel Debugger after starting the Camel Application using the preLaunchTask specified",
            "type": "apache.camel",
            "request": "attach",
            "preLaunchTask": "Start Camel application"
        },
        {
            "name": "Attach Camel Debugger",
            "type": "apache.camel",
            "request": "attach",
            "attach_jmx_url": "service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi/camel"
        },
        {
            "name": "Attach Camel Debugger",
            "type": "apache.camel",
            "request": "attach",
            "attach_jmx_url": "service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi/camel"
        },
        {
            "name": "Attach Camel Debugger",
            "type": "apache.camel",
            "request": "attach",
            "attach_pid": "<replace with PID>"
        },
        {
            "name": "Attach Camel Debugger",
            "type": "apache.camel",
            "request": "attach"
        },
        {
            "name": "(Windows) Launch",
            "type": "cppvsdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "console": "externalTerminal"
        },
        {
            "name": "(Windows) Attach",
            "type": "cppvsdbg",
            "request": "attach",
        },
        {
            "name": "(gdb) Pipe Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "<full path to pipe program such as plink.exe>",
                "pipeArgs": [],
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Pipe Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "<full path to pipe program such as plink.exe>",
                "pipeArgs": [],
                "pipeCwd": ""
            },
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "args": [],
            "stopAtEntry": false,
            "cwd": "${fileDirname}",
            "environment": [],
            "externalConsole": false,
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Bash on Windows Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": [
                    "-c"
                ],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Bash on Windows Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": [
                    "-c"
                ],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Bash on Windows Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": [
                    "-c"
                ],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Play in Editor",
            "type": "godot-mono",
            "mode": "playInEditor",
            "request": "launch"
        },
        {
            "name": "Launch (Select Scene)",
            "type": "godot-mono",
            "request": "launch",
            "mode": "executable",
            "preLaunchTask": "build",
            "executable": "<insert-godot-executable-path-here>",
            "executableArguments": [
                "--path",
                "",
                "SelectLaunchScene"
            ]
        },
        {
            "name": "Launch",
            "type": "godot-mono",
            "request": "launch",
            "mode": "executable",
            "preLaunchTask": "build",
            "executable": "<insert-godot-executable-path-here>",
            "executableArguments": [
                "--path",
                ""
            ]
        },
        {
            "name": "Attach",
            "type": "godot-mono",
            "request": "attach",
            "address": "localhost",
            "port": 23685
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda with API Gateway",
            "invokeTarget": {
                "target": "api",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "api": {
                "path": "Path",
                "httpMethod": "Method",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "autojs",
            "request": "launch",
            "main": "main.js",
            "stopOnEntry": true,
            "device": "[current]",
            "name": "[Auto.js Pro调试]使用最近设备"
        },
        {
            "name": "Arduino",
            "type": "arduino",
            "request": "launch",
            "program": "${file}",
            "cwd": "${workspaceFolder}",
            "MIMode": "gdb",
            "targetArchitecture": "arm",
            "miDebuggerPath": "",
            "debugServerPath": "",
            "debugServerArgs": "",
            "customLaunchSetupCommands": [
                {
                    "text": "target remote localhost:3333"
                },
                {
                    "text": "file \"${file}\""
                },
                {
                    "text": "load"
                },
                {
                    "text": "monitor reset halt"
                },
                {
                    "text": "monitor reset init"
                }
            ],
            "stopAtEntry": true,
            "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
            "launchCompleteCommand": "exec-continue",
            "filterStderr": true,
            "args": []
        },
        {
            "name": ".NET Core Launch (console)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "console": "internalConsole",
            "pipeTransport": {
                "pipeCwd": "${workspaceFolder}",
                "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                "pipeArgs": [],
                "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
            }
        },
        {
            "name": ".NET Core Launch (web)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "serverReadyAction": {
                "action": "openExternally",
                "pattern": "\\bNow listening on:\\s+(https?://\\S+)"
            },
            "env": {
                "ASPNETCORE_ENVIRONMENT": "Development"
            },
            "sourceFileMap": {
                "/Views": "${workspaceFolder}/Views"
            }
        },
        {
            "name": ".NET Core Launch (console)",
            "type": "coreclr",
            "request": "launch",
            "preLaunchTask": "build",
            "program": "${workspaceFolder}/bin/Debug/<target-framework>/<project-name.dll>",
            "args": [],
            "cwd": "${workspaceFolder}",
            "stopAtEntry": false,
            "console": "internalConsole"
        },
        {
            "name": ".NET Core Attach",
            "type": "coreclr",
            "request": "attach",
            "pipeTransport": {
                "pipeCwd": "${workspaceFolder}",
                "pipeProgram": "enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'",
                "pipeArgs": [],
                "debuggerPath": "enter the path for the debugger on the target machine, for example ~/vsdbg/vsdbg"
            }
        },
        {
            "name": ".NET Core Attach",
            "type": "coreclr",
            "request": "attach"
        },
        {
            "name": "(gdb) Bash on Windows Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "processId": "${command:pickRemoteProcess}",
            "pipeTransport": {
                "debuggerPath": "/usr/bin/gdb",
                "pipeProgram": "${env:windir}\\system32\\bash.exe",
                "pipeArgs": [
                    "-c"
                ],
                "pipeCwd": ""
            },
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "(gdb) Attach",
            "type": "cppdbg",
            "request": "attach",
            "program": "enter program name, for example ${workspaceFolder}/a.exe",
            "MIMode": "gdb",
            "miDebuggerPath": "/path/to/gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                },
                {
                    "description": "Set Disassembly Flavor to Intel",
                    "text": "-gdb-set disassembly-flavor intel",
                    "ignoreFailures": true
                }
            ]
        },
        {
            "name": "Play in Editor",
            "type": "godot-mono",
            "mode": "playInEditor",
            "request": "launch"
        },
        {
            "name": "Launch (Select Scene)",
            "type": "godot-mono",
            "request": "launch",
            "mode": "executable",
            "preLaunchTask": "build",
            "executable": "<insert-godot-executable-path-here>",
            "executableArguments": [
                "--path",
                "",
                "SelectLaunchScene"
            ]
        },
        {
            "name": "Launch",
            "type": "godot-mono",
            "request": "launch",
            "mode": "executable",
            "preLaunchTask": "build",
            "executable": "<insert-godot-executable-path-here>",
            "executableArguments": [
                "--path",
                ""
            ]
        },
        {
            "name": "Attach",
            "type": "godot-mono",
            "request": "attach",
            "address": "localhost",
            "port": 23685
        },
        {
            "name": "Attach",
            "type": "godot-mono",
            "request": "attach",
            "address": "localhost",
            "port": 23685
        },
        {
            "name": "BrightScript Debug: Launch",
            "type": "brightscript",
            "request": "launch",
            "host": "${promptForHost}",
            "password": "${promptForPassword}",
            "rootDir": "${workspaceFolder}"
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda",
            "invokeTarget": {
                "target": "template",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "lambda": {
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda",
            "invokeTarget": {
                "target": "code",
                "lambdaHandler": "Function Handler",
                "projectRoot": "${workspaceFolder}"
            },
            "lambda": {
                "runtime": "Lambda Runtime",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda",
            "invokeTarget": {
                "target": "code",
                "lambdaHandler": "Function Handler",
                "projectRoot": "${workspaceFolder}"
            },
            "lambda": {
                "runtime": "Lambda Runtime",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "aws-sam",
            "request": "direct-invoke",
            "name": "Invoke Lambda with API Gateway",
            "invokeTarget": {
                "target": "api",
                "templatePath": "Template Location",
                "logicalId": "Function Logical ID"
            },
            "api": {
                "path": "Path",
                "httpMethod": "Method",
                "payload": {
                    "json": {}
                }
            }
        },
        {
            "type": "autojs",
            "request": "launch",
            "main": "main.js",
            "stopOnEntry": true,
            "device": "[current]",
            "name": "[Auto.js Pro调试]使用最近设备"
        },
        {
            "name": "Arduino",
            "type": "arduino",
            "request": "launch",
            "program": "${file}",
            "cwd": "${workspaceFolder}",
            "MIMode": "gdb",
            "targetArchitecture": "arm",
            "miDebuggerPath": "",
            "debugServerPath": "",
            "debugServerArgs": "",
            "customLaunchSetupCommands": [
                {
                    "text": "target remote localhost:3333"
                },
                {
                    "text": "file \"${file}\""
                },
                {
                    "text": "load"
                },
                {
                    "text": "monitor reset halt"
                },
                {
                    "text": "monitor reset init"
                }
            ],
            "stopAtEntry": true,
            "serverStarted": "Info\\ :\\ [\\w\\d\\.]*:\\ hardware",
            "launchCompleteCommand": "exec-continue",
            "filterStderr": true,
            "args": []
        },
        {
            "name": "Python: Current File",
            "type": "python",
            "request": "launch",
            "program": "${file}",
            "console": "integratedTerminal",
            "justMyCode": true
        },
        {
            "type": "apache.camel",
            "request": "attach",
            "name": "Attach Camel Debugger"
        }
    ]
}